{"remainingRequest":"/Users/zhangmeng/Documents/code_china/vue3-ts-axios/node_modules/babel-loader/lib/index.js!/Users/zhangmeng/Documents/code_china/vue3-ts-axios/node_modules/ts-loader/index.js??clonedRuleSet-40.use[2]!/Users/zhangmeng/Documents/code_china/vue3-ts-axios/src/utils/request.ts","dependencies":[{"path":"/Users/zhangmeng/Documents/code_china/vue3-ts-axios/src/utils/request.ts","mtime":1618817886001},{"path":"/Users/zhangmeng/Documents/code_china/vue3-ts-axios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangmeng/Documents/code_china/vue3-ts-axios/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhangmeng/Documents/code_china/vue3-ts-axios/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvemhhbmdtZW5nL0RvY3VtZW50cy9jb2RlX2NoaW5hL3Z1ZTMtdHMtYXhpb3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvemhhbmdtZW5nL0RvY3VtZW50cy9jb2RlX2NoaW5hL3Z1ZTMtdHMtYXhpb3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IEVsTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtcGx1cyc7CmV4cG9ydCB2YXIgUmVxdWVzdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gUmVxdWVzdCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXF1ZXN0KTsKICB9CgogIF9jcmVhdGVDbGFzcyhSZXF1ZXN0LCBudWxsLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogLy8gY29uc3RydWN0b3IoKSB7CiAgICAvLyAgICAgLy8g5Yib5bu6YXhpb3Plrp7kvosKICAgIC8vICAgICB0aGlzLmF4aW9zSW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoe3RpbWVvdXQ6IDEwMDAgKiAxMn0pOwogICAgLy8gICAgIC8vIOWIneWni+WMluaLpuaIquWZqAogICAgLy8gICAgIHRoaXMuaW5pdEludGVyY2VwdG9ycygpOwogICAgLy8gfQogICAgZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgLy8g5Yib5bu6YXhpb3Plrp7kvosKICAgICAgdGhpcy5heGlvc0luc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICAgICAgICBiYXNlVVJMOiBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfVVJMICsgJy9hcGkvdjEnLAogICAgICAgIHRpbWVvdXQ6IDYwMDAKICAgICAgfSk7IC8vIOWIneWni+WMluaLpuaIquWZqAoKICAgICAgdGhpcy5pbml0SW50ZXJjZXB0b3JzKCk7CiAgICAgIHJldHVybiBheGlvczsKICAgIH0gLy8g5Li65LqG6K6paHR0cC50c+S4reiOt+WPluWIneWni+WMluWlveeahGF4aW9z5a6e5L6LCiAgICAvLyBwdWJsaWMgZ2V0SW50ZXJjZXB0b3JzKCkgewogICAgLy8gICAgIHJldHVybiB0aGlzLmF4aW9zSW5zdGFuY2U7CiAgICAvLyB9CiAgICAvLyDliJ3lp4vljJbmi6bmiKrlmagKCiAgfSwgewogICAga2V5OiAiaW5pdEludGVyY2VwdG9ycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdEludGVyY2VwdG9ycygpIHsKICAgICAgLy8g6K6+572ucG9zdOivt+axguWktAogICAgICB0aGlzLmF4aW9zSW5zdGFuY2UuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnOwogICAgICAvKioKICAgICAgICog6K+35rGC5oum5oiq5ZmoCiAgICAgICAqIOavj+asoeivt+axguWJje+8jOWmguaenOWtmOWcqHRva2Vu5YiZ5Zyo6K+35rGC5aS05Lit5pC65bimdG9rZW4KICAgICAgICovCgogICAgICB0aGlzLmF4aW9zSW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAgICAgICAvLyBjb25zdCB0b2tlbiA9IFZ1ZS5scy5nZXQoQUNDRVNTX1RPS0VOKQogICAgICAgIC8vIGlmICh0b2tlbikgewogICAgICAgIC8vICAgICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gJ0JlYXJlciAnICsgdG9rZW4KICAgICAgICAvLyB9CiAgICAgICAgLy8g55m75b2V5rWB56iL5o6n5Yi25Lit77yM5qC55o2u5pys5Zyw5piv5ZCm5a2Y5ZyodG9rZW7liKTmlq3nlKjmiLfnmoTnmbvlvZXmg4XlhrUKICAgICAgICAvLyDkvYbmmK/ljbPkvb90b2tlbuWtmOWcqO+8jOS5n+acieWPr+iDvXRva2Vu5piv6L+H5pyf55qE77yM5omA5Lul5Zyo5q+P5qyh55qE6K+35rGC5aS05Lit5pC65bimdG9rZW4KICAgICAgICAvLyDlkI7lj7DmoLnmja7mkLrluKbnmoR0b2tlbuWIpOaWreeUqOaIt+eahOeZu+W9leaDheWGte+8jOW5tui/lOWbnue7meaIkeS7rOWvueW6lOeahOeKtuaAgeeggQogICAgICAgIC8vIGlmIChjb25maWcuaGVhZGVycy5pc0p3dCkgewogICAgICAgIHZhciB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdBQ0NFU1NfVE9LRU4nKTsKCiAgICAgICAgaWYgKHRva2VuKSB7CiAgICAgICAgICBjb25maWcuaGVhZGVycy5BdXRob3JpemF0aW9uID0gJ0JlYXJlciAnICsgdG9rZW47CiAgICAgICAgfSAvLyB9CgoKICAgICAgICByZXR1cm4gY29uZmlnOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOyAvLyDlk43lupTmi6bmiKrlmagKCiAgICAgIHRoaXMuYXhpb3NJbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKCAvLyDor7fmsYLmiJDlip8KICAgICAgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8gaWYgKHJlcy5oZWFkZXJzLmF1dGhvcml6YXRpb24pIHsKICAgICAgICAvLyAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2lkX3Rva2VuJywgcmVzLmhlYWRlcnMuYXV0aG9yaXphdGlvbik7CiAgICAgICAgLy8gfSBlbHNlIHsKICAgICAgICAvLyAgICAgaWYgKHJlcy5kYXRhICYmIHJlcy5kYXRhLnRva2VuKSB7CiAgICAgICAgLy8gICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnaWRfdG9rZW4nLCByZXMuZGF0YS50b2tlbik7CiAgICAgICAgLy8gICAgIH0KICAgICAgICAvLyB9CiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAvLyByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBSZXF1ZXN0LmVycm9ySGFuZGxlKHJlc3BvbnNlKTsgLy8gcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgIHJldHVybiByZXNwb25zZTsKICAgICAgICB9CiAgICAgIH0sIC8vIOivt+axguWksei0pQogICAgICBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB2YXIgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZTsKCiAgICAgICAgaWYgKHJlc3BvbnNlKSB7CiAgICAgICAgICAvLyDor7fmsYLlt7Llj5Hlh7rvvIzkvYbmmK/kuI3lnKgyeHjnmoTojIPlm7QKICAgICAgICAgIFJlcXVlc3QuZXJyb3JIYW5kbGUocmVzcG9uc2UpOwogICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyDlpITnkIbmlq3nvZHnmoTmg4XlhrUKICAgICAgICAgIC8vIGVnOuivt+axgui2heaXtuaIluaWree9keaXtu+8jOabtOaWsHN0YXRl55qEbmV0d29ya+eKtuaAgQogICAgICAgICAgLy8gbmV0d29ya+eKtuaAgeWcqGFwcC52dWXkuK3mjqfliLbnnYDkuIDkuKrlhajlsYDnmoTmlq3nvZHmj5DnpLrnu4Tku7bnmoTmmL7npLrpmpDol48KICAgICAgICAgIC8vIOWFs+S6juaWree9kee7hOS7tuS4reeahOWIt+aWsOmHjeaWsOiOt+WPluaVsOaNru+8jOS8muWcqOaWree9kee7hOS7tuS4reivtOaYjgogICAgICAgICAgRWxNZXNzYWdlLndhcm5pbmcoJ+e9kee7nOi/nuaOpeW8guW4uCzor7fnqI3lkI7lho3or5UhJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogaHR0cOaPoeaJi+mUmeivrwogICAgICogQHBhcmFtIHJlcyDlk43lupTlm57osIMs5qC55o2u5LiN5ZCM5ZON5bqU6L+b6KGM5LiN5ZCM5pON5L2cCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZXJyb3JIYW5kbGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGVycm9ySGFuZGxlKHJlcykgewogICAgICAvLyDnirbmgIHnoIHliKTmlq0KICAgICAgc3dpdGNoIChyZXMuc3RhdHVzKSB7CiAgICAgICAgY2FzZSA0MDE6CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA0MDM6CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA0MDQ6CiAgICAgICAgICBFbE1lc3NhZ2Uud2FybmluZygn6K+35rGC55qE6LWE5rqQ5LiN5a2Y5ZyoJyk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIEVsTWVzc2FnZS53YXJuaW5nKCfov57mjqXplJnor68nKTsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIFJlcXVlc3Q7Cn0oKTs="},{"version":3,"sources":["/Users/zhangmeng/Documents/code_china/vue3-ts-axios/src/utils/request.ts"],"names":[],"mappings":";;;AAAA,OAAO,KAAP,MAAsE,OAAtE;AACA,SAAS,SAAT,QAA0B,cAA1B;AAEA,WAAa,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGI;AACA;AACA;AACA;AACA;AACA;AAEO,oBAAW;AACd;AACA,WAAK,aAAL,GAAqB,KAAK,CAAC,MAAN,CAAa;AAC9B,QAAA,OAAO,EAAE,OAAO,CAAC,GAAR,CAAY,gBAAZ,GAA+B,SADV;AAE9B,QAAA,OAAO,EAAE;AAFqB,OAAb,CAArB,CAFc,CAMd;;AACA,WAAK,gBAAL;AACA,aAAO,KAAP;AACH,KAnBL,CAqBI;AACA;AACA;AACA;AAEA;;AA1BJ;AAAA;AAAA,WA2BW,4BAAuB;AAC1B;AACA,WAAK,aAAL,CAAmB,QAAnB,CAA4B,OAA5B,CAAoC,IAApC,CAAyC,cAAzC,IAA2D,mCAA3D;AACA;;;AAGG;;AACH,WAAK,aAAL,CAAmB,YAAnB,CAAgC,OAAhC,CAAwC,GAAxC,CACI,UAAC,MAAD,EAA+B;AAE3B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACI,YAAM,KAAK,GAAG,YAAY,CAAC,OAAb,CAAqB,cAArB,CAAd;;AACA,YAAI,KAAJ,EAAW;AACP,UAAA,MAAM,CAAC,OAAP,CAAe,aAAf,GAA+B,YAAY,KAA3C;AACH,SAdsB,CAe3B;;;AACA,eAAO,MAAP;AACH,OAlBL,EAmBI,UAAC,KAAD,EAAe;AACX,QAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACH,OArBL,EAP0B,CAgC1B;;AACA,WAAK,aAAL,CAAmB,YAAnB,CAAgC,QAAhC,CAAyC,GAAzC,EACI;AACA,gBAAC,QAAD,EAA4B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,YAAI,QAAQ,CAAC,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACA,iBAAO,QAAP;AACH,SAHD,MAGO;AACH,UAAA,OAAO,CAAC,WAAR,CAAoB,QAApB,EADG,CAEH;;AACA,iBAAO,QAAP;AACH;AACJ,OAnBL,EAoBI;AACA,gBAAC,KAAD,EAAe;AAAA,YACJ,QADI,GACQ,KADR,CACJ,QADI;;AAEX,YAAI,QAAJ,EAAc;AACV;AACA,UAAA,OAAO,CAAC,WAAR,CAAoB,QAApB;AACA,iBAAO,OAAO,CAAC,MAAR,CAAe,QAAQ,CAAC,IAAxB,CAAP;AACH,SAJD,MAIO;AACH;AACA;AACA;AACA;AACA,UAAA,SAAS,CAAC,OAAV,CAAkB,eAAlB;AACH;AACJ,OAlCL;AAoCH;AAED;;;AAGG;;AArGP;AAAA;AAAA,WAsGY,qBAAmB,GAAnB,EAA2B;AAC/B;AACA,cAAQ,GAAG,CAAC,MAAZ;AACI,aAAK,GAAL;AACI;;AACJ,aAAK,GAAL;AACI;;AACJ,aAAK,GAAL;AACI,UAAA,SAAS,CAAC,OAAV,CAAkB,UAAlB;AACA;;AACJ;AACI,UAAA,SAAS,CAAC,OAAV,CAAkB,MAAlB;AATR;AAWH;AAnHL;;AAAA;AAAA","sourcesContent":["import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport { ElMessage } from 'element-plus'\n \nexport class Request {\n    public static axiosInstance: AxiosInstance;\n\n    // constructor() {\n    //     // 创建axios实例\n    //     this.axiosInstance = axios.create({timeout: 1000 * 12});\n    //     // 初始化拦截器\n    //     this.initInterceptors();\n    // }\n\n    public static init() {\n        // 创建axios实例\n        this.axiosInstance = axios.create({\n            baseURL: process.env.VUE_APP_BASE_URL + '/api/v1',\n            timeout: 6000\n        });\n        // 初始化拦截器\n        this.initInterceptors();\n        return axios;\n    }\n\n    // 为了让http.ts中获取初始化好的axios实例\n    // public getInterceptors() {\n    //     return this.axiosInstance;\n    // }\n\n    // 初始化拦截器\n    public static initInterceptors() {\n        // 设置post请求头\n        this.axiosInstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n        /**\n         * 请求拦截器\n         * 每次请求前，如果存在token则在请求头中携带token\n         */\n        this.axiosInstance.interceptors.request.use(\n            (config: AxiosRequestConfig) => {\n \n                // const token = Vue.ls.get(ACCESS_TOKEN)\n                // if (token) {\n                //     config.headers['Authorization'] = 'Bearer ' + token\n                // }\n \n                // 登录流程控制中，根据本地是否存在token判断用户的登录情况\n                // 但是即使token存在，也有可能token是过期的，所以在每次的请求头中携带token\n                // 后台根据携带的token判断用户的登录情况，并返回给我们对应的状态码\n                // if (config.headers.isJwt) {\n                    const token = localStorage.getItem('ACCESS_TOKEN');\n                    if (token) {\n                        config.headers.Authorization = 'Bearer ' + token;\n                    }\n                // }\n                return config;\n            },\n            (error: any) => {\n                console.log(error);\n            },\n        );\n \n\n        // 响应拦截器\n        this.axiosInstance.interceptors.response.use(\n            // 请求成功\n            (response: AxiosResponse) => {\n                // if (res.headers.authorization) {\n                //     localStorage.setItem('id_token', res.headers.authorization);\n                // } else {\n                //     if (res.data && res.data.token) {\n                //         localStorage.setItem('id_token', res.data.token);\n                //     }\n                // }\n \n                if (response.status === 200) {\n                    // return Promise.resolve(response.data);\n                    return response;\n                } else {\n                    Request.errorHandle(response);\n                    // return Promise.reject(response.data);\n                    return response;\n                }\n            },\n            // 请求失败\n            (error: any) => {\n                const {response} = error;\n                if (response) {\n                    // 请求已发出，但是不在2xx的范围\n                    Request.errorHandle(response);\n                    return Promise.reject(response.data);\n                } else {\n                    // 处理断网的情况\n                    // eg:请求超时或断网时，更新state的network状态\n                    // network状态在app.vue中控制着一个全局的断网提示组件的显示隐藏\n                    // 关于断网组件中的刷新重新获取数据，会在断网组件中说明\n                    ElMessage.warning('网络连接异常,请稍后再试!');\n                }\n            }\n        );\n    }\n\n    /**\n     * http握手错误\n     * @param res 响应回调,根据不同响应进行不同操作\n     */\n    private static errorHandle(res: any) {\n        // 状态码判断\n        switch (res.status) {\n            case 401:\n                break;\n            case 403:\n                break;\n            case 404:\n                ElMessage.warning('请求的资源不存在');\n                break;\n            default:\n                ElMessage.warning('连接错误');\n        }\n    }\n\n}"],"sourceRoot":""}]}